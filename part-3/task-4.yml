apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-01-19T20:07:50Z"
    generateName: webapp-8474645868-
    labels:
      app: webapp
      pod-template-hash: "8474645868"
    name: webapp-8474645868-bvr87
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-8474645868
      uid: 50bf17eb-0cba-4f11-b7fd-66b614555f98
    resourceVersion: "8393"
    uid: b1c7884a-0672-4d83-9c07-9e08b176015d
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5mkp7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-mycluster-server-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5mkp7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://99d2cf6d52961556e3dadd6b068ff4ea17a7781cfdb5787ca2828af23e490351
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:4c0fdaa8b6341bfdeca5f18f7837462c80cff90527ee35ef185571e1c327beac
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-19T20:07:53Z"
    hostIP: 172.18.0.4
    phase: Running
    podIP: 10.42.0.102
    podIPs:
    - ip: 10.42.0.102
    qosClass: BestEffort
    startTime: "2024-01-19T20:07:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-01-19T20:07:50Z"
    generateName: webapp-8474645868-
    labels:
      app: webapp
      pod-template-hash: "8474645868"
    name: webapp-8474645868-z9rw6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-8474645868
      uid: 50bf17eb-0cba-4f11-b7fd-66b614555f98
    resourceVersion: "8396"
    uid: 1d605c5a-72fe-4c2e-a4a0-7088e0df236c
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vt7sq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-mycluster-server-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vt7sq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://885a5611e5087963222597eac46d72e13b3c972e917b4f281918478713be00f9
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:4c0fdaa8b6341bfdeca5f18f7837462c80cff90527ee35ef185571e1c327beac
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-19T20:07:53Z"
    hostIP: 172.18.0.4
    phase: Running
    podIP: 10.42.0.101
    podIPs:
    - ip: 10.42.0.101
    qosClass: BestEffort
    startTime: "2024-01-19T20:07:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-01-19T20:07:50Z"
    generateName: webapp-8474645868-
    labels:
      app: webapp
      pod-template-hash: "8474645868"
    name: webapp-8474645868-jwf5v
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-8474645868
      uid: 50bf17eb-0cba-4f11-b7fd-66b614555f98
    resourceVersion: "8402"
    uid: c0c8a552-dd8c-468f-b6aa-401a704cd9ea
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27wdl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-worker-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-27wdl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://543b9ec86b92f4bc198e13d81264837b7bf7e683b5183b4a8675fab726d6e3cc
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:4c0fdaa8b6341bfdeca5f18f7837462c80cff90527ee35ef185571e1c327beac
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-19T20:07:54Z"
    hostIP: 172.18.0.2
    phase: Running
    podIP: 10.42.2.8
    podIPs:
    - ip: 10.42.2.8
    qosClass: BestEffort
    startTime: "2024-01-19T20:07:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-01-19T20:07:50Z"
    generateName: webapp-8474645868-
    labels:
      app: webapp
      pod-template-hash: "8474645868"
    name: webapp-8474645868-jkj6f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-8474645868
      uid: 50bf17eb-0cba-4f11-b7fd-66b614555f98
    resourceVersion: "8408"
    uid: d7c5ae57-b892-497c-b6c2-0f786e690ceb
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lp9jx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-worker-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lp9jx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://64119bfac9786cb308fe8489be6e467c4387b22cb515111f077d1266c5a033c6
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:4c0fdaa8b6341bfdeca5f18f7837462c80cff90527ee35ef185571e1c327beac
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-19T20:07:54Z"
    hostIP: 172.18.0.2
    phase: Running
    podIP: 10.42.2.9
    podIPs:
    - ip: 10.42.2.9
    qosClass: BestEffort
    startTime: "2024-01-19T20:07:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-01-19T20:07:50Z"
    generateName: webapp-8474645868-
    labels:
      app: webapp
      pod-template-hash: "8474645868"
    name: webapp-8474645868-clj6m
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webapp-8474645868
      uid: 50bf17eb-0cba-4f11-b7fd-66b614555f98
    resourceVersion: "8411"
    uid: 52a3aaf7-e7ba-4443-97c0-2a5c6419a210
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7qhjj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3d-worker-0
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7qhjj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-01-19T20:07:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0e39f80f092a74d595e8307a2e0258121f3a0f73e8d70bd8c5a8c9882070000f
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:4c0fdaa8b6341bfdeca5f18f7837462c80cff90527ee35ef185571e1c327beac
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-19T20:07:54Z"
    hostIP: 172.18.0.2
    phase: Running
    podIP: 10.42.2.10
    podIPs:
    - ip: 10.42.2.10
    qosClass: BestEffort
    startTime: "2024-01-19T20:07:51Z"
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-01-19T20:07:50Z"
    generation: 1
    labels:
      app: webapp
      pod-template-hash: "8474645868"
    name: webapp-8474645868
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: webapp
      uid: 7d5185a4-a7e9-4fd8-b550-5fd3c3fe4ab6
    resourceVersion: "8412"
    uid: 50bf17eb-0cba-4f11-b7fd-66b614555f98
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: webapp
        pod-template-hash: "8474645868"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: webapp
          pod-template-hash: "8474645868"
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
kind: List
metadata:
  resourceVersion: ""
